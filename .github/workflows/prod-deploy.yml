name: Production Deployment

on:
  push:
    branches:
      - prod

env:
  SSH_USER: ${{ secrets.PROD_SSH_USER }}
  SSH_KEY: ${{ secrets.PROD_SSH_KEY }}
  SSH_HOST: ${{ secrets.PROD_SSH_HOST }}
  UPDATE_SCRIPT: ${{ secrets.BACKEND_PROD_DEPLOY_SCRIPT }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/vm.key
          chmod 600 ~/.ssh/vm.key
          cat >>~/.ssh/config <<END
          Host vm
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/vm.key
            StrictHostKeyChecking no
          END
        
      - name: Deploy to EC2 remote server
        run: |
          ssh vm 'sudo apt update && sudo apt install git curl -y'
          echo "$UPDATE_SCRIPT" > ~/script.sh
          scp -i ~/.ssh/vm.key ~/script.sh $SSH_USER@$SSH_HOST:/home/$SSH_USER
          ssh vm 'sh /home/${{ env.SSH_USER }}/script.sh'
          ssh vm 'cd /home/${{ env.SSH_USER }}/backend'
          ssh vm 'cp /home/${{ env.SSH_USER }}/backend/env-example /home/${{ env.SSH_USER }}/backend/.env'
          ssh vm 'sudo docker compose --project-directory=//home/${{ env.SSH_USER }}/backend up -d'
          ssh vm 'echo "PASS!!!"'
          
